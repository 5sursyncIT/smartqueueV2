# Generated by Django 4.2.25 on 2025-10-02 23:02

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("tickets", "0002_initial"),
        ("customers", "0001_initial"),
        ("tenants", "0002_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "event",
                    models.CharField(
                        choices=[
                            ("ticket_created", "Ticket créé"),
                            ("ticket_called", "Ticket appelé"),
                            ("ticket_ready", "Votre tour approche"),
                            ("appointment_reminder", "Rappel RDV"),
                            ("appointment_confirmed", "RDV confirmé"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[
                            ("sms", "SMS"),
                            ("email", "Email"),
                            ("whatsapp", "WhatsApp"),
                            ("push", "Push"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True, help_text="Pour email uniquement", max_length=255
                    ),
                ),
                (
                    "body",
                    models.TextField(
                        help_text="Template avec variables: {{ticket_number}}, {{queue_name}}, etc."
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "db_table": "notification_templates",
                "ordering": ("name",),
                "unique_together": {("tenant", "event", "channel")},
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[
                            ("sms", "SMS"),
                            ("email", "Email"),
                            ("whatsapp", "WhatsApp"),
                            ("push", "Push"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "recipient",
                    models.CharField(help_text="Email ou téléphone", max_length=255),
                ),
                ("subject", models.CharField(blank=True, max_length=255)),
                ("body", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("sent", "Envoyé"),
                            ("failed", "Échec"),
                            ("delivered", "Délivré"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                (
                    "provider_id",
                    models.CharField(
                        blank=True,
                        help_text="ID du message chez le provider",
                        max_length=255,
                    ),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "appointment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="notifications",
                        to="tickets.appointment",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="notifications",
                        to="customers.customer",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="notifications",
                        to="notifications.notificationtemplate",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        to="tenants.tenant",
                    ),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="notifications",
                        to="tickets.ticket",
                    ),
                ),
            ],
            options={
                "db_table": "notifications",
                "ordering": ("-created_at",),
                "indexes": [
                    models.Index(
                        fields=["status", "created_at"],
                        name="notificatio_status_dee16f_idx",
                    ),
                    models.Index(
                        fields=["tenant", "channel"],
                        name="notificatio_tenant__b520fb_idx",
                    ),
                ],
            },
        ),
    ]
