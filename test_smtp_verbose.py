#!/usr/bin/env python3
"""
Script de diagnostic SMTP avec logs verbeux pour voir exactement ce qui se passe.
"""
import os
import sys
import django
from dotenv import load_dotenv

# Charger les variables d'environnement
load_dotenv()

# Configuration Django
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "smartqueue_backend.settings.dev")
sys.path.insert(0, os.path.join(os.path.dirname(__file__)))
django.setup()

from apps.core.models import SystemConfig
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import logging

# Activer les logs SMTP d√©taill√©s
logging.basicConfig(level=logging.DEBUG)
smtplib.SMTP.debuglevel = 1  # Logs verbeux SMTP

def test_smtp_detailed():
    """Test SMTP avec logs d√©taill√©s."""
    config = SystemConfig.load()

    print("=" * 80)
    print("TEST SMTP D√âTAILL√â - SmartQueue")
    print("=" * 80)
    print()

    print("üìã Configuration:")
    print(f"   Host: {config.smtp_host}")
    print(f"   Port: {config.smtp_port}")
    print(f"   TLS: {config.smtp_use_tls}")
    print(f"   SSL: {config.smtp_use_ssl}")
    print(f"   Username: {config.smtp_username}")
    print(f"   From: {config.smtp_from_email}")
    print()

    test_email = input("üìß Entrez l'adresse email de destination (Entr√©e = youssouphadiop@hotmail.fr): ").strip()
    if not test_email:
        test_email = "youssouphadiop@hotmail.fr"

    print()
    print(f"üöÄ Envoi d'un email de test √†: {test_email}")
    print()
    print("=" * 80)
    print("LOGS SMTP D√âTAILL√âS:")
    print("=" * 80)
    print()

    try:
        # Connexion SMTP avec logs d√©taill√©s
        if config.smtp_use_ssl:
            print("‚Üí Connexion SSL...")
            server = smtplib.SMTP_SSL(config.smtp_host, config.smtp_port, timeout=30)
        else:
            print("‚Üí Connexion standard...")
            server = smtplib.SMTP(config.smtp_host, config.smtp_port, timeout=30)

        print("‚Üí Connexion √©tablie")
        print()

        # EHLO
        print("‚Üí Envoi EHLO...")
        server.ehlo()
        print()

        # STARTTLS si n√©cessaire
        if config.smtp_use_tls and not config.smtp_use_ssl:
            print("‚Üí Activation STARTTLS...")
            server.starttls()
            server.ehlo()  # EHLO apr√®s STARTTLS
            print()

        # Authentification
        if config.smtp_username and config.smtp_password:
            print("‚Üí Authentification...")
            server.login(config.smtp_username, config.smtp_password)
            print("‚úì Authentification r√©ussie")
            print()

        # Cr√©er l'email
        msg = MIMEMultipart('alternative')
        msg['Subject'] = 'üß™ Test SMTP D√©taill√© - SmartQueue'
        msg['From'] = config.smtp_from_email
        msg['To'] = test_email
        msg['Reply-To'] = config.smtp_from_email

        # Corps de l'email
        text = f"""
Bonjour,

Ceci est un email de test envoy√© avec logs SMTP d√©taill√©s.

Configuration utilis√©e:
- Serveur: {config.smtp_host}:{config.smtp_port}
- TLS: {'Oui' if config.smtp_use_tls else 'Non'}
- SSL: {'Oui' if config.smtp_use_ssl else 'Non'}
- Authentification: {'Oui' if config.smtp_username else 'Non'}
- De: {config.smtp_from_email}
- √Ä: {test_email}

Si vous recevez cet email, la configuration SMTP fonctionne!

‚ö†Ô∏è IMPORTANT: V√©rifiez √©galement votre dossier SPAM/Courrier ind√©sirable!

Cordialement,
SmartQueue Diagnostic Tool
"""

        html = f"""
<html>
<body>
<h2>üß™ Test SMTP D√©taill√© - SmartQueue</h2>
<p>Bonjour,</p>
<p>Ceci est un email de test envoy√© avec logs SMTP d√©taill√©s.</p>

<h3>Configuration utilis√©e:</h3>
<ul>
<li><strong>Serveur:</strong> {config.smtp_host}:{config.smtp_port}</li>
<li><strong>TLS:</strong> {'Oui' if config.smtp_use_tls else 'Non'}</li>
<li><strong>SSL:</strong> {'Oui' if config.smtp_use_ssl else 'Non'}</li>
<li><strong>Authentification:</strong> {'Oui' if config.smtp_username else 'Non'}</li>
<li><strong>De:</strong> {config.smtp_from_email}</li>
<li><strong>√Ä:</strong> {test_email}</li>
</ul>

<p style="color: green;">Si vous recevez cet email, la configuration SMTP fonctionne!</p>

<p style="color: red;"><strong>‚ö†Ô∏è IMPORTANT:</strong> V√©rifiez √©galement votre dossier SPAM/Courrier ind√©sirable!</p>

<p>Cordialement,<br>SmartQueue Diagnostic Tool</p>
</body>
</html>
"""

        part1 = MIMEText(text, 'plain')
        part2 = MIMEText(html, 'html')
        msg.attach(part1)
        msg.attach(part2)

        print("‚Üí Envoi de l'email...")
        print()

        # Envoyer
        result = server.send_message(msg)

        print()
        print("=" * 80)
        print()

        if result:
            print(f"‚ö†Ô∏è  AVERTISSEMENT: Certains destinataires ont √©t√© rejet√©s:")
            for recipient, (code, message) in result.items():
                print(f"   {recipient}: {code} - {message}")
        else:
            print("‚úÖ Email envoy√© avec succ√®s!")
            print(f"   De: {config.smtp_from_email}")
            print(f"   √Ä: {test_email}")

        server.quit()

        print()
        print("=" * 80)
        print()
        print("üì¨ PROCHAINES √âTAPES:")
        print()
        print("1. V√©rifiez votre bo√Æte de r√©ception")
        print("2. ‚ö†Ô∏è  V√âRIFIEZ LE DOSSIER SPAM/COURRIER IND√âSIRABLE ‚ö†Ô∏è")
        print("3. Attendez 2-5 minutes pour la livraison")
        print()
        print("Si vous ne recevez toujours pas l'email:")
        print("- V√©rifiez les logs de votre serveur mail (cPanel, Plesk, etc.)")
        print("- Contactez votre h√©bergeur pour v√©rifier les restrictions")
        print("- V√©rifiez les enregistrements SPF/DKIM de votre domaine")
        print()

    except smtplib.SMTPAuthenticationError as e:
        print()
        print("=" * 80)
        print()
        print(f"‚ùå ERREUR D'AUTHENTIFICATION: {e}")
        print()
        print("Solutions possibles:")
        print("- V√©rifiez le username (email complet vs username seul)")
        print("- V√©rifiez le mot de passe")
        print("- V√©rifiez que le compte email existe")
        print()

    except smtplib.SMTPException as e:
        print()
        print("=" * 80)
        print()
        print(f"‚ùå ERREUR SMTP: {e}")
        print()

    except Exception as e:
        print()
        print("=" * 80)
        print()
        print(f"‚ùå ERREUR: {e}")
        print()

if __name__ == "__main__":
    test_smtp_detailed()
